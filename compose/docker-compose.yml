version: '3'

services:
  logger:
    image: bobrik/syslog-ng    
    volumes:
      - syslog:/var/log/syslog-ng
    ports:
      - "127.0.0.1:514:514/udp"
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    expose:
      - 9000
  glances:
    image: vimagick/glances
    volumes:
      - ./data:/etc/glances
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    pid: host
    restart: always      
    expose:
      - 61208
  popforward:
    image: kianby/pythonapp:latest
    environment:       
      APP_NAME: popforward
      APP_CONFIG: /app/config.ini     
    volumes:
      - ${SOURCEDIR}/popforward:/app/popforward
      - ${DATADIR}/popforward/popforward.config.ini:/app/config.ini
  imapscan:
    image: domcomte/imapscan
    volumes:
      - imapscan_spamassassin:/var/spamassassin
      - imapscan_imapfilter:/root/.imapfilter
      - imapscan_accounts:/root/accounts
  wallabag:
    image: wallabag/wallabag
    environment:
      - SYMFONY__ENV__MAILER_HOST=${SMTP_HOST}:${SMTP_PORT}
      - SYMFONY__ENV__MAILER_USER=${SMTP_USER}
      - SYMFONY__ENV__MAILER_PASSWORD=${SMTP_PASSWORD}
      - SYMFONY__ENV__FROM_EMAIL=${WALLABAG_FROM_EMAIL}
      - SYMFONY__ENV__DOMAIN_NAME=${WALLABAG_URL}
    expose:
      - "80"
    volumes:
      - ${DATADIR}/wallabag/data:/var/www/wallabag/data
      - ${DATADIR}/wallabag/images:/var/www/wallabag/web/assets/images
  shaarli:
    image: shaarli/shaarli:master
    expose:
      - "80"
    volumes:
      - shaarli-cache:/var/www/shaarli/cache
      - shaarli-data:/var/www/shaarli/data   
  wiki:
    image: gitea/gitea:latest
    environment:
      USER_UID: ${PUID}
      USER_GID: ${GUID}    
      DISABLE_SSH: "true"
    expose:
      - 3000
    volumes:
      - ${DATADIR}/gitea:/data
  isso:
    image: wonderfall/isso
    environment:
      GID: ${GUID}
      UID: ${PUID}
    volumes:
      - ${DATADIR}/isso/config:/config
      - ${DATADIR}/isso/db:/db
    expose:
      - 8080
  selfoss:
    image: hardware/selfoss
    environment:
      UID: ${PUID}
      GID: ${GUID}
    volumes:
      - ${DATADIR}/selfoss:/selfoss/data
  dbcloud:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - dbcloud:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${CLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${CLOUD_MYSQL_USER}
  rediscloud:
    image: redis:alpine
    restart: always      
  nextcloud:
    image: nextcloud:apache
    restart: always
    expose:
      - 80
    volumes:
      - nextcloud:/var/www/html
    environment:
      - REDIS_HOST=rediscloud
      - MYSQL_HOST=dbcloud
      - MYSQL_PASSWORD=${CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${CLOUD_MYSQL_USER}
    depends_on:
      - dbcloud
      - rediscloud
  croncloud:
    image: nextcloud:apache
    restart: always
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - dbcloud
      - rediscloud   
  pleroma:
    image: sirboops/pleroma
    restart: always
    environment:
      - MIX_ENV=prod
    volumes:
      - ${DATADIR}/pleroma/config:/opt/pleroma/config
      - ${DATADIR}/pleroma/uploads:/opt/pleroma/uploads
    depends_on:
      - pleromadb
    expose:
      - 4000
    networks:
      - pleroma      
  pleromadb:
    image: postgres:10.3-alpine
    restart: always
    volumes:
      - ${DATADIR}/pleroma/postgres:/var/lib/postgresql/data  
    networks:
      - pleroma          
  reverse-proxy:
    image: linuxserver/letsencrypt
    environment:
      EMAIL: ${REVERSE_EMAIL}
      URL: ${REVERSE_DOMAIN}
      SUBDOMAINS: ${REVERSE_SUBDOMAINS}
      VALIDATION: ${REVERSE_VALIDATION}
      TZ: "Europe/Paris"
      PUID: ${PUID}
      PGID: ${GUID}
    ports:
      - "80:80"     # The HTTP port
      - "443:443"
    volumes:
      - ${DATADIR}/reverseproxy:/config
      - syslog:/syslog
    cap_add:
      - NET_ADMIN # necessary for fail2ban to work
  backup:
    image: kianby/backuper
    environment:
      MAILX_SMTP_HOST: smtp://${SMTP_HOST}:${SMTP_PORT}
      MAILX_SMTP_USER: ${SMTP_USER}
      MAILX_SMTP_PASSWORD: ${SMTP_PASSWORD}
      MAILX_SMTP_TOADMIN: ${SMTP_TOADMIN}
      BACKUP_OPTIONS: ${BACKUP_OPTIONS}
    volumes:
      - ${DATADIR}:/source/data:ro
      - shaarli-data:/source/shaarli-data:ro
volumes:
  syslog:
  portainer_data:
  shaarli-cache:
  shaarli-data:
  imapscan_spamassassin:
  imapscan_imapfilter:
  imapscan_accounts:
  nextcloud:
  dbcloud:

networks:
  pleroma: