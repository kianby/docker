version: '3'

services:
  logger:
    container_name: logger
    image: bobrik/syslog-ng    
    volumes:
      - syslog:/var/log/syslog-ng
    ports:
      - "127.0.0.1:514:514/udp"
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    expose:
      - 9000
  glances:
    container_name: glances
    image: vimagick/glances
    volumes:
      - ./data:/etc/glances
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    pid: host
    restart: always      
    expose:
      - 61208
  popforward:
    container_name: popforward
    image: kianby/pythonapp:latest
    environment:       
      APP_NAME: popforward
      APP_CONFIG: /app/config.ini     
    volumes:
      - ${SOURCEDIR}/popforward:/app/popforward
      - ${DATADIR}/popforward/popforward.config.ini:/app/config.ini
  imapscan:
    container_name: imapscan
    image: domcomte/imapscan
    volumes:
      - imapscan_spamassassin:/var/spamassassin
      - imapscan_imapfilter:/root/.imapfilter
      - imapscan_accounts:/root/accounts
  wallabag:
    container_name: wallabag
    image: wallabag/wallabag
    environment:
      - SYMFONY__ENV__MAILER_HOST=${SMTP_HOST}:${SMTP_PORT}
      - SYMFONY__ENV__MAILER_USER=${SMTP_USER}
      - SYMFONY__ENV__MAILER_PASSWORD=${SMTP_PASSWORD}
      - SYMFONY__ENV__FROM_EMAIL=${WALLABAG_FROM_EMAIL}
      - SYMFONY__ENV__DOMAIN_NAME=${WALLABAG_URL}
    expose:
      - "80"
    volumes:
      - ${DATADIR}/wallabag/data:/var/www/wallabag/data
      - ${DATADIR}/wallabag/images:/var/www/wallabag/web/assets/images
  shaarli:
    container_name: shaarli
    image: shaarli/shaarli:master
    expose:
      - "80"
    volumes:
      - shaarli-cache:/var/www/shaarli/cache
      - shaarli-data:/var/www/shaarli/data   
  wiki:
    container_name: wiki
    image: gitea/gitea:latest
    environment:
      USER_UID: ${PUID}
      USER_GID: ${GUID}    
      DISABLE_SSH: "true"
    expose:
      - 3000
    volumes:
      - ${DATADIR}/gitea:/data
  isso:
    container_name: isso
    image: wonderfall/isso
    environment:
      GID: ${GUID}
      UID: ${PUID}
    volumes:
      - ${DATADIR}/isso/config:/config
      - ${DATADIR}/isso/db:/db
    expose:
      - 8080
  selfoss:
    container_name: selfoss
    image: hardware/selfoss
    environment:
      UID: ${PUID}
      GID: ${GUID}
    volumes:
      - ${DATADIR}/selfoss:/selfoss/data
  transmission:
    container_name: transmission   
    image: linuxserver/transmission
    environment:
      TZ: "Europe/Paris"
      PUID: ${PUID}
      PGID: ${GUID}
    expose:
     - 9091
    ports:
      - "51413:51413"    
      - "51413:51413/udp"
    volumes:
      - transmission_config:/config 
      - transmission_downloads:/downloads      
  dbcloud:
    container_name: dbcloud
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    volumes:
      - dbcloud:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${CLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${CLOUD_MYSQL_USER}
  rediscloud:
    container_name: rediscloud
    image: redis:alpine
    restart: always      
  nextcloud:
    container_name: nextcloud
    image: nextcloud:apache
    restart: always
    expose:
      - 80
    volumes:
      - nextcloud:/var/www/html
    environment:
      - REDIS_HOST=rediscloud
      - MYSQL_HOST=dbcloud
      - MYSQL_PASSWORD=${CLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${CLOUD_MYSQL_DATABASE}
      - MYSQL_USER=${CLOUD_MYSQL_USER}
    depends_on:
      - dbcloud
      - rediscloud
  croncloud:
    container_name: croncloud
    image: nextcloud:apache
    restart: always
    volumes:
      - nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - dbcloud
      - rediscloud
  diaspora:
    container_name: diaspora
    image: koehn/diaspora:latest 
    links:
      - diaspodb
      - diasporedis
    volumes:
      - diaspopublic:/home/diaspora/diaspora/public
      - ${DATADIR}/diaspora/diaspora.yml:/home/diaspora/diaspora/config/diaspora.yml:ro
      - ${DATADIR}/diaspora/database.yml:/home/diaspora/diaspora/config/database.yml:ro
    expose:
      - 3000
    restart: always
  diaspodb:
    container_name: diaspodb
    read_only: true
    deploy:
      resources:
        limits:
          memory: 8G
    image: postgres:10-alpine
    tmpfs:
    - /tmp
    environment:
      - POSTGRES_USER=${DIASPORA_DB_USER}
      - POSTGRES_PASSWORD=${DIASPORA_DB_PASSWORD}
      - POSTGRES_DB=${DIASPORA_DB_NAME}
    volumes:
      - diaspodb:/var/lib/postgresql/data
      - diaspodb-run:/var/run/postgresql
    restart: always
  diasporedis:
    container_name: diasporedis
    image: redis:latest
    deploy:    
      resources:
        limits:
          memory: 384M
    read_only: true
    tmpfs:
    - /tmp
    command: redis-server --appendonly yes
    volumes:
      - diasporedis:/data
    restart: always
  reverse-proxy:
    container_name: reverseproxy
    image: linuxserver/letsencrypt
    environment:
      EMAIL: ${REVERSE_EMAIL}
      URL: ${REVERSE_DOMAIN}
      SUBDOMAINS: ${REVERSE_SUBDOMAINS}
      VALIDATION: ${REVERSE_VALIDATION}
      TZ: "Europe/Paris"
      PUID: ${PUID}
      PGID: ${GUID}
    ports:
      - "80:80"     # The HTTP port
      - "443:443"
    volumes:
      - transmission_downloads:/transmission_downloads
      - diaspopublic:/diaspora/public
      - ${DATADIR}/reverseproxy:/config
      - syslog:/syslog
    cap_add:
      - NET_ADMIN # necessary for fail2ban to work
volumes:
  syslog:
  portainer_data:
  shaarli-cache:
  shaarli-data:
  imapscan_spamassassin:
  imapscan_imapfilter:
  imapscan_accounts:
  nextcloud:
  dbcloud:
  diaspopublic:
  diaspodb:
  diaspodb-run:
  diasporedis:
  transmission_downloads:
  transmission_config:

